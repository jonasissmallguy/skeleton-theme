{% comment %}
  Custom collection section with image on top, 3 columns, and load more functionality.
{% endcomment %}

<div class="collection-wrapper">
  <h1 class="collection-title" style="font-family: {{ settings.custom_font }};">
    {{ collection.title }}
  </h1>

  <div class="collection-products" id="product-grid">
    {% assign initial_limit = 14 %}
    {% assign total_products = collection.products.size %}
    {% assign shown_products = 0 %}

    {% for product in collection.products %}
      {% if forloop.index <= initial_limit %}
        {% assign is_hidden = false %}
        {% assign shown_products = forloop.index %}
      {% else %}
        {% assign is_hidden = true %}
      {% endif %}

      <div class="collection-product{% if is_hidden %} hidden{% endif %}">
        {% if product.featured_image %}
          {% render 'image',
            class: 'collection-product__image',
            image: product.featured_image,
            url: product.url,
            width: 519,
            height: 727,
            crop: 'center'
          %}
        {% endif %}
        <div class="collection-product__content" style="font-family: {{ settings.custom_font }};">
          <p class="product-title">{{ product.title | escape | link_to: product.url }}</p>
          <p class="product-price">{{ product.price | money }}</p>
        </div>
      </div>
    {% endfor %}
  </div>

  {% if total_products > initial_limit %}
    <div class="flex flex-col flex-center flex-col-reverse my-16" id="load-more-container">
      <button type="button" id="load-more-btn" class="relative mb-4 button button-primary">Vis mere</button>
      <div class="w-full flex flex-col-reverse mb-4 items-center">
        <div role="progressbar" class="overflow-hidden rounded-full h-1 w-64" style="background-color: rgb(236, 227, 211);">
          <div id="progress-bar" class="h-full max-w-full" style="width: {{ shown_products | times: 100.0 | divided_by: total_products }}%; background-color: rgb(0, 0, 0);"></div>
        </div>
        <span id="progress-text" class="text-center mb-1 text-xs uppercase">
          Vis {{ shown_products }} ud af {{ total_products }} produkter
        </span>
      </div>
    </div>
  {% endif %}
</div>
<style>
  .collection-wrapper {
    width: 100vw;
    max-width: 100vw;
    margin-left: calc(-50vw + 50%);
    padding: 0 2vw;
    box-sizing: border-box;
    background-color: #FFFCEE;
  }

  .collection-title {
    font-size: 2rem;
    margin-bottom: 24px;
  }

  .collection-products {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 32px;
  }

  .collection-product {
    text-align: left;
    width: 100%;
  }

  .collection-product__image img {
    width: 100%;
    height: auto;
    object-fit: cover;
    display: block;
    margin: 0;
  }

  .collection-product__content {
    margin-top: 12px;
    padding: 0;
  }

  .product-title {
    font-size: 1.2rem;
    margin-bottom: 8px;
  }

  .product-price {
    font-weight: bold;
  }

  .hidden {
    display: none;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const loadMoreBtn = document.getElementById('load-more-btn');
    const hiddenProducts = document.querySelectorAll('.collection-product.hidden');
    const progressBar = document.getElementById('progress-bar');
    const progressText = document.getElementById('progress-text');

    let shown = {{ shown_products }};
    const total = {{ total_products }};
    const perClick = 14;

    loadMoreBtn.addEventListener('click', () => {
      let revealed = 0;

      hiddenProducts.forEach((item) => {
        if (item.classList.contains('hidden') && revealed < perClick) {
          item.classList.remove('hidden');
          revealed++;
          shown++;
        }
      });

      const percentage = Math.min(100, (shown / total) * 100);
      progressBar.style.width = `${percentage}%`;
      progressText.textContent = `Vis ${shown} ud af ${total} produkter`;

      if (shown >= total) {
        loadMoreBtn.style.display = 'none';
      }
    });
  });
</script>
